1.1 内存管理
=========================

内存管理系统和模块在OS以及编程语言中占据着重要的地位，任何资源的使用都离不开申请和释放这两个动作，内存管理中的两个重要过程就是内存分配和垃圾回收。

---------------

结构总览
-----------

内存系统设计始终围绕这alloc和malloc，一个内存管理系统如何利用有限的内存资源为尽可能多的程序或者模块提供服务是他的核心目标，下图展示了其管理设计思想：

.. raw:: html

   <center>
    <img src="../_static/mem_manager.png" style="" alt="内存管理"></img>
   </center>
..

在下文的介绍中我们将按照图中所示脉络进行说明和分析。此外值得一提的是，虽然大多数OS都会将内存管理拆分成多个复杂的模块并引入一些中间层提供缓存和转换的功能，但是内存管理系统实际上都可以简化程两个模块，即是内存分配器(Allocator)、垃圾收集器(Collector)。当然除了这两个模块之外，在研究内存管理时，都会映入第三个模块-用户程序(Mutator)，帮助我们理解整个系统的工作流程。

.. code-block::

    Mutator ----> Allocator ----> Heap <---- Collector

..

用户程序(Mutator)： 可以通过内存分配器(Allocator)创建对象或者更新对象持有的指针；
内存分配器(Allocator)：处理用户程序的内存分配请求；
垃圾收集器(Collector)：标记内存中的对象并回收不需要的内存；
前述三大模块是内存管理的核心，他们在应用程序运行期间可以维护管理内存达到一种相对平衡的状态。

基本概念
---------------

内存布局
^^^^^^^^^^^

操作系统会在其上运行的应用程序（进程）分配一片巨大的虚拟内存，需要注意的是，与操作系统的主存和物理内存不一样，


.. note::

    物理内存

    物理内存，在应用中，自然是顾名思义，物理上，真实的插在板子上的内存是多大就是多大了。而在CPU中的概念，物理内存就是CPU的地址线可以直接进行寻址的内存空间大小。比如8086只有20根地址线，那么它的寻址空间就是1MB，我们就说8086能支持1MB的物理内存，及时我们安装了128M的内存条在板子上，我们也只能说8086拥有1MB的物理内存空间。同理我们现在大部分使用的是32位的机子，32位的386以上CPU就可以支持最大4GB的物理内存空间了。
    正在运行的一个进程，他所需的内存是有可能大于内存条容量之和的，比如你的内存条是256M，你的程序却要创建一个2G的数据区，那么不是所有数据都能一起加载到内存（物理内存）中，势必有一部分数据要放到其他介质中（比如硬盘），待进程需要访问那部分数据时，在通过调度进入物理内存。所以，虚拟内存是进程运行时所有内存空间的总和，并且可能有一部分不在物理内存中，而物理内存就是我们平时所了解的内存条。有的地方呢，也叫这个虚拟内存为内存交换区。

.. note::

    虚拟内存

    物理内存与虚拟内存的映射关系
    虚拟内存并非物理上真正存在的概念，他是物理内存的更上层的抽象，如下图


