进程与线程的区别？
========================

### 区别

* 进程（Process）是系统进行资源分配和调度的基本单位，而线程（Thread）是CPU调度和分派的基本单位
* 线程依赖于进程而存在，也就是说，在一个进程中至少有一个线程
* 进程拥有自己的独立寻址空间，线程共享进程的地址空间；
* 进程拥有系统资源的一个独立单位，而线程自己基本上不拥有系统资源，只拥有一点在运行中必可少的资源（如寄存器、程序计数器和栈），和其他线程共享本进程的相关资源如内存、IO、CPU等等
* 在线程切换时，涉及到整个进程CPU环境的保存环境的设置以及刚被调度起来的CPU环境的设置，而线程切换只需保存少量的寄存器内容，可见，当执行一次进程切换所花费的开销远大于线程切换的开销
* 线程之间的通信更加方便，同一个进程下的线程共享全局变量等数据，而进程之间如果要共享数据的话，就必须通过进程间通信的方式进行

### 同一个进程下的线程可以共享哪些数据？

* 进程代码
* 进程的共有数据
* 文件句柄
* 进程的当前目录
* 信号处理器/信号处理函数：对收到的信号的处理方式
* 进程ID和进程组ID

### 线程独占哪些资源？

* 线程ID
* 一组寄存器的值
* 线程自身的栈（堆是共享的）
* 错误返回码：线程可能会产生不同的错误返回码，一个线程的错误返回码不应该被其他线程修改了；
* 信号掩码/信号屏蔽字（Signal mask）：表示是否屏蔽、阻塞相应的信号（SIGKILL，SIGSTOP除外）




